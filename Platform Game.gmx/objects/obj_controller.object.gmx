<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Set some global variables
gameover = false;

score = 0;

checkpoint_x = x;
checkpoint_y = y;
background_music_delay = 5;
gameoverdelay = 300;

//Controller Variables

gamepad_set_axis_deadzone(0,0.1);
global.gp_Start = gp_start;
global.gp_Select = gp_select;

global.gp_A = gp_face1;
global.gp_B = gp_face2;
global.gp_X = gp_face3;
global.gp_Y = gp_face4;
global.gp_RB = gp_shoulderr;
global.gp_LB = gp_shoulderl;
global.gp_RT = gp_shoulderrb;
global.gp_LT = gp_shoulderlb;
global.gp_DR = gp_padr;
global.gp_DL = gp_padl;
global.gp_DU = gp_padu;
global.gp_DD = gp_padd;

spikeblockspeed = 28;
spikeblockmovetime = 40;
spikeblockstaytime = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delay, then play Background Music

if background_music_delay != 0
background_music_delay -= 1;
else
{
    if !audio_is_playing(snd_overworld)
    //audio_play_sound(snd_overworld,10,true);
    background_music_delay = -1;
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if Game is Over

if gameover = false
{
    x = obj_player.x;
    y = obj_player.y;
}
else
{  
    if obj_player.invincible = true
    {
     gameover = false;
     exit;
    }
    
    gamepad_set_vibration(0,gameoverdelay/200,gameoverdelay/200);
    
    view_object = obj_controller;
    
    if obj_player.abilitystate = 0
    obj_player.sprite_index = spr_playerhurt;
    
    else if obj_player.abilitystate = 1
    obj_player.sprite_index = spr_iceplayerhurt;
    
    else if obj_player.abilitystate = 2
    obj_player.sprite_index = spr_shieldplayerhurt;
    
    audio_stop_sound(snd_overworld);
    
    if gameoverdelay = 300
    {
        audio_play_sound(snd_death,10,false);
    }
    if gameoverdelay = 300
    {
        audio_play_sound(snd_gameover,10,false);
    }
    
    if gameoverdelay &lt; 240 &amp;&amp; gameoverdelay != 0 &amp;&amp; instance_number(obj_player) &gt; 0
    {
        obj_player.image_speed = 0.2;
        
        if obj_player.hspeed = 0
        obj_player.vspeed = -15;
        else
        obj_player.vspeed += obj_player.grav*1.5;
        obj_player.hspeed = obj_player.image_xscale*3;
    }

    if gameoverdelay &gt; 0
    {
        gameoverdelay --;
    }
    else
    {
        room_restart();
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Let the Player bring up the Pause Game

if keyboard_check_pressed(vk_escape) || gamepad_button_check_pressed(0,global.gp_Start)
instance_create(x, y, obj_pause_menu_controller);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

draw_set_halign(fa_left);

draw_set_font(fnt_HUD);
draw_set_color(c_gray);
draw_text(view_xport + 1200, view_yport + 20, "SCORE: " + string(score));

//Debugging Texts
draw_text(view_xport + 20, view_yport + 20, "Onground: " + string(obj_player.onground));

if obj_player.invincible 
draw_text(view_xport + 20, view_yport + 40, "Invincible: " + string(obj_player.invincible));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>35,35</point>
  </PhysicsShapePoints>
</object>
